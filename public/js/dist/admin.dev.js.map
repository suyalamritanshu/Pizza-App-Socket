{"version":3,"sources":["admin.js"],"names":["initAdmin","orderTableBody","document","querySelector","orders","markup","axios","get","headers","then","res","data","generateMarkup","innerHTML","err","console","log","renderItems","items","parsedItems","Object","values","map","menuItem","item","name","qty","join","order","_id","customerId","address","status","createdAt","format","paymentStatus","module","exports"],"mappings":";;AAAA;;AACA;;AACA;;;;AAEC,SAASA,SAAT,GAAqB;AAClB,MAAMC,cAAc,GAAGC,QAAQ,CAACC,aAAT,CAAuB,iBAAvB,CAAvB;AACA,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,MAAJ;;AAEAC,oBAAMC,GAAN,CAAU,eAAV,EAA2B;AACvBC,IAAAA,OAAO,EAAE;AACL,0BAAoB;AADf;AADc,GAA3B,EAKGC,IALH,CAKQ,UAAAC,GAAG,EAAG;AACVN,IAAAA,MAAM,GAAGM,GAAG,CAACC,IAAb;AACAN,IAAAA,MAAM,GAAGO,cAAc,CAACR,MAAD,CAAvB;AACAH,IAAAA,cAAc,CAACY,SAAf,GAA2BR,MAA3B;AACH,GATD,WASS,UAAAS,GAAG,EAAG;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,GAXD;;AAaA,WAASG,WAAT,CAAqBC,KAArB,EAA4B;AACxB,QAAIC,WAAW,GAAGC,MAAM,CAACC,MAAP,CAAcH,KAAd,CAAlB;AACA,WAAOC,WAAW,CAACG,GAAZ,CAAgB,UAACC,QAAD,EAAc;AACjC,4CACUA,QAAQ,CAACC,IAAT,CAAcC,IADxB,gBACoCF,QAAQ,CAACG,GAD7C;AAGH,KAJM,EAIJC,IAJI,CAIC,EAJD,CAAP;AAKD;;AAEH,WAASf,cAAT,CAAwBR,MAAxB,EAAgC;AAC5B,WAAOA,MAAM,CAACkB,GAAP,CAAW,UAAAM,KAAK,EAAI;AACvB,sIAGcA,KAAK,CAACC,GAHpB,4CAIgBZ,WAAW,CAACW,KAAK,CAACV,KAAP,CAJ3B,2FAMoCU,KAAK,CAACE,UAAN,CAAiBL,IANrD,mEAOoCG,KAAK,CAACG,OAP1C,gSAW8DH,KAAK,CAACC,GAXpE,8ZAe2BD,KAAK,CAACI,MAAN,KAAiB,cAAjB,GAAkC,UAAlC,GAA+C,EAf1E,iIAiBiDJ,KAAK,CAACI,MAAN,KAAiB,WAAjB,GAA+B,UAA/B,GAA4C,EAjB7F,mIAmBgDJ,KAAK,CAACI,MAAN,KAAiB,UAAjB,GAA8B,UAA9B,GAA2C,EAnB3F,mIAqBiDJ,KAAK,CAACI,MAAN,KAAiB,WAAjB,GAA+B,UAA/B,GAA4C,EArB7F,sKAwBiDJ,KAAK,CAACI,MAAN,KAAiB,WAAjB,GAA+B,UAA/B,GAA4C,EAxB7F,s0BAwCW,wBAAOJ,KAAK,CAACK,SAAb,EAAwBC,MAAxB,CAA+B,SAA/B,CAxCX,2GA2CWN,KAAK,CAACO,aAAN,GAAsB,MAAtB,GAA+B,UA3C1C;AA+CH,KAhDM,EAgDJR,IAhDI,CAgDC,EAhDD,CAAP;AAiDH;AACJ;;AAEDS,MAAM,CAACC,OAAP,GAAiBrC,SAAjB","sourcesContent":["import axios from 'axios'\r\nimport moment from 'moment'\r\nimport Noty from 'noty'\r\n\r\n function initAdmin() {\r\n    const orderTableBody = document.querySelector('#orderTableBody')\r\n    let orders = []\r\n    let markup\r\n\r\n    axios.get('/admin/orders', {\r\n        headers: {\r\n            \"X-Requested-With\": \"XMLHttpRequest\"\r\n        }\r\n\r\n    }).then(res =>{\r\n        orders = res.data \r\n        markup = generateMarkup(orders)\r\n        orderTableBody.innerHTML = markup\r\n    }).catch(err =>{\r\n        console.log(err)\r\n    })\r\n\r\n    function renderItems(items) {\r\n        let parsedItems = Object.values(items)\r\n        return parsedItems.map((menuItem) => {\r\n            return `\r\n                <p>${ menuItem.item.name } - ${ menuItem.qty } pcs </p>\r\n            `\r\n        }).join('')\r\n      }\r\n\r\n    function generateMarkup(orders) {\r\n        return orders.map(order => {\r\n            return `\r\n                <tr>\r\n                <td class=\"border px-4 py-2 text-green-900\">\r\n                    <p>${ order._id }</p>\r\n                    <div>${ renderItems(order.items) }</div>\r\n                </td>\r\n                <td class=\"border px-4 py-2\">${ order.customerId.name }</td>\r\n                <td class=\"border px-4 py-2\">${ order.address }</td>\r\n                <td class=\"border px-4 py-2\">\r\n                    <div class=\"inline-block relative w-64\">\r\n                        <form action=\"/admin/order/status\" method=\"POST\">\r\n                            <input type=\"hidden\" name=\"orderId\" value=\"${ order._id }\">\r\n                            <select name=\"status\" onchange=\"this.form.submit()\"\r\n                                class=\"block appearance-none w-full bg-white border border-gray-400 hover:border-gray-500 px-4 py-2 pr-8 rounded shadow leading-tight focus:outline-none focus:shadow-outline\">\r\n                                <option value=\"order_placed\"\r\n                                    ${ order.status === 'order_placed' ? 'selected' : '' }>\r\n                                    Placed</option>\r\n                                <option value=\"confirmed\" ${ order.status === 'confirmed' ? 'selected' : '' }>\r\n                                    Confirmed</option>\r\n                                <option value=\"prepared\" ${ order.status === 'prepared' ? 'selected' : '' }>\r\n                                    Prepared</option>\r\n                                <option value=\"delivered\" ${ order.status === 'delivered' ? 'selected' : '' }>\r\n                                    Delivered\r\n                                </option>\r\n                                <option value=\"completed\" ${ order.status === 'completed' ? 'selected' : '' }>\r\n                                    Completed\r\n                                </option>\r\n                            </select>\r\n                        </form>\r\n                        <div\r\n                            class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\r\n                            <svg class=\"fill-current h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\"\r\n                                viewBox=\"0 0 20 20\">\r\n                                <path\r\n                                    d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\r\n                            </svg>\r\n                        </div>\r\n                    </div>\r\n                </td>\r\n                <td class=\"border px-4 py-2\">\r\n                    ${ moment(order.createdAt).format('hh:mm A') }\r\n                </td>\r\n                <td class=\"border px-4 py-2\">\r\n                    ${ order.paymentStatus ? 'paid' : 'Not paid' }\r\n                </td>\r\n            </tr>\r\n        `\r\n        }).join('')\r\n    }\r\n}\r\n\r\nmodule.exports = initAdmin"],"file":"admin.dev.js"}