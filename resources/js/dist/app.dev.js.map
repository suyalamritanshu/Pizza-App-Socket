{"version":3,"sources":["app.js"],"names":["addToCart","document","querySelectorAll","cartCounter","querySelector","updateCart","pizza","axios","post","then","res","innerText","data","totalQty","Noty","type","timeout","text","progressBar","layout","show","err","forEach","btn","addEventListener","e","JSON","parse","dataset","alertMsg","setTimeout","remove","statuses","hiddenInput","order","value","time","createElement","updateStatus","status","classList","stepCompleted","dataProp","add","updatedAt","format","appendChild","nextElementSibling","socket","io","emit","_id","adminAreaPath","window","location","pathname","includes","on","updatedOrder"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport Noty from 'noty'\r\nimport { initAdmin } from './admin'\r\nimport moment from 'moment'\r\nimport { initStripe } from './stripe'\r\n\r\n\r\nlet addToCart = document.querySelectorAll('.add-to-cart')\r\nlet cartCounter = document.querySelector('#cartCounter')\r\nfunction updateCart(pizza){\r\n     axios.post('/update-cart', pizza).then(res =>{\r\n        cartCounter.innerText = res.data.totalQty\r\n\r\n        new Noty({\r\n            type: 'success',\r\n            timeout: 1000,\r\n            text: 'Item added to cart',\r\n            progressBar: false,\r\n            layout: 'topLeft'\r\n        }).show();\r\n    }).catch(err => {\r\n        new Noty({\r\n            type: 'error',\r\n            timeout: 1000,\r\n            text: 'Something went wrong',\r\n            progressBar: false,\r\n        }).show();\r\n     })\r\n}\r\n\r\naddToCart.forEach((btn) => {\r\n    btn.addEventListener('click', (e) => {\r\n        let pizza = JSON.parse(btn.dataset.pizza)\r\n        updateCart(pizza)\r\n    })\r\n})\r\n\r\n// Remove alert message after X seconds\r\nconst alertMsg = document.querySelector('#success-alert')\r\nif(alertMsg) {\r\n    setTimeout(() => {\r\n        alertMsg.remove()\r\n    }, 2000)\r\n}\r\n\r\n\r\n\r\n// Change order status\r\nlet statuses = document.querySelectorAll('.status_line')\r\nlet hiddenInput = document.querySelector('#hiddenInput')\r\nlet order = hiddenInput ? hiddenInput.value: null\r\norder = JSON.parse(order)\r\n\r\nlet time = document.createElement('small')\r\n\r\n\r\nfunction updateStatus(order){\r\n    statuses.forEach((status) => {\r\n        status.classList.remove('step-completed')\r\n        status.classList.remove('current')\r\n    })\r\n       let stepCompleted = true;\r\n       statuses.forEach((status) =>{\r\n            let dataProp = status.dataset.status\r\n            if(stepCompleted){\r\n                status.classList.add('step-completed')\r\n            }\r\n\r\n            if(dataProp == order.status){\r\n                stepCompleted = false\r\n                time.innerText = moment(order.updatedAt).format('hh:mm A')\r\n                status.appendChild(time)\r\n                if(status.nextElementSibling){\r\n                    status.nextElementSibling.classList.add('C')\r\n                }\r\n              \r\n            }\r\n       })\r\n\r\n}\r\n\r\nupdateStatus(order);\r\n\r\ninitStripe()\r\n\r\n\r\n//Socket\r\n\r\nlet socket = io()\r\ninitAdmin(socket)\r\n//join\r\n\r\nif(order){\r\n\r\nsocket.emit('join', `order_${order._id}`)\r\n\r\n}\r\n\r\nlet adminAreaPath = window.location.pathname\r\nif(adminAreaPath.includes('admin')) {\r\n    initAdmin(socket)\r\n    socket.emit('join', 'adminRoom')\r\n}\r\n\r\nsocket.on('orderUpdated', (data) => {\r\n    const updatedOrder = { ...order }\r\n    updatedOrder.updatedAt = moment().format()\r\n    updatedOrder.status = data.status\r\n    updateStatus(updatedOrder)\r\n    new Noty({\r\n        type: 'success',\r\n        timeout: 1000,\r\n        text: 'Order updated',\r\n        progressBar: false,\r\n    }).show();\r\n})\r\n\r\n"],"file":"app.dev.js"}