{"version":3,"sources":["authController.js"],"names":["require","request","passport","User","bcrypt","authController","_getRedirectUrl","req","user","role","login","res","render","postLogin","next","body","email","password","flash","redirect","authenticate","err","info","message","logIn","register","postRegister","name","exists","result","hash","hashedPassword","save","then","logout","module","exports"],"mappings":"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","sourcesContent":["const { request } = require(\"express\")\r\nconst passport = require('passport')\r\nconst User = require('../../models/user')\r\nconst bcrypt = require('bcrypt')\r\n\r\nfunction authController(){\r\n    const _getRedirectUrl = (req) => {\r\n        return req.user.role === 'admin' ? '/admin/orders' : '/customer/orders'\r\n    }\r\n    return {\r\n        login(req, res){\r\n             res.render('auth/login')\r\n        },\r\n\r\n        postLogin(req, res, next){\r\n\r\n            const {email, password } = req.body\r\n           //Validate request\r\n           if(!email || !password){\r\n               req.flash('error', 'All fields are required')\r\n               return res.redirect('/login')\r\n           }\r\n              passport.authenticate('local', (err, user, info) =>{\r\n                   if(err){\r\n                       req.flash('error', info.message)\r\n                       return next(err)\r\n                   }   \r\n\r\n                    if(!user) {\r\n                    req.flash('error', info.message )\r\n                    return res.redirect('/login')\r\n                }\r\n\r\n                req.logIn(user, (err) => {\r\n                    if(err) {\r\n                        req.flash('error', info.message ) \r\n                        return next(err)\r\n                    }\r\n\r\n\r\n                    return res.redirect(_getRedirectUrl(req))\r\n                })\r\n            })(req, res, next)\r\n        },\r\n\r\n        register(req, res){\r\n            res.render('auth/register')\r\n       },\r\n\r\n       async postRegister (req, res) {\r\n           const { name, email, password } = req.body\r\n           //Validate request\r\n           if(!name || !email || !password){\r\n               req.flash('error', 'All fields are required')\r\n               req.flash('name', name)\r\n               req.flash('email', email)\r\n               return res.redirect('/register')\r\n           }\r\n\r\n           // Check if email exists \r\n         User.exists({ email: email }, (err, result) => {\r\n            if(result) {\r\n               req.flash('error', 'Email already taken')\r\n               req.flash('name', name)\r\n               req.flash('email', email) \r\n               return res.redirect('/register')\r\n            }\r\n        })\r\n\r\n        //Hash Password\r\n        const hashedPassword = await bcrypt.hash(password, 10)\r\n\r\n        // Create a user\r\n\r\n        const user = new User({\r\n            name,\r\n            email,\r\n            password: hashedPassword\r\n        })\r\n\r\n        user.save().then((user) =>{\r\n            //Login\r\n                return res.redirect('/')\r\n        }).catch(err =>{\r\n            req.flash('error', 'Something went wrong')\r\n            return res.redirect('/register')\r\n        })\r\n       },\r\n\r\n       logout(req, res){\r\n           req.logout()\r\n           return res.redirect('/login')\r\n       }\r\n    }\r\n}\r\n\r\nmodule.exports = authController"],"file":"authController.dev.js"}